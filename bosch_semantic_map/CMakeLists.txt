cmake_minimum_required(VERSION 2.4.6)
include($ENV{ROS_ROOT}/core/rosbuild/rosbuild.cmake)

rosbuild_init()

rosbuild_find_ros_package(ias_knowledge_base)
rosbuild_include(rosprolog utils)
#
set( OWL_PATH_PREFIX ${ias_knowledge_base_PACKAGE_PATH} )
fix_ros_destination_path(OWL_PATH_PREFIX)
#
file(GLOB inputs owl/*.in)
#
foreach( _in ${inputs} )
  string(REPLACE ".in" "" _out ${_in})
  configure_file( ${_in} ${_out} )
endforeach( _in )
#
# replace path to local OWL files
rosbuild_find_ros_package(bosch_semantic_map)
set( LOCAL_PACKAGE_PATH ${bosch_semantic_map_PACKAGE_PATH} )
fix_ros_destination_path(LOCAL_PACKAGE_PATH)
#
file(GLOB inputs prolog/*.in)
foreach( _in ${inputs} )
  string(REPLACE ".in" "" _out ${_in})
  configure_file( ${_in} ${_out} )
endforeach( _in )


# replace path in local OWL files

rosbuild_find_ros_package(bosch_semantic_map)
set( LOCAL_PACKAGE_PATH ${bosch_semantic_map_PACKAGE_PATH} )
rosbuild_find_ros_package(ias_knowledge_base)
set( IAS_KNOWLEDGE_BASE_PATH ${ias_knowledge_base_PACKAGE_PATH} )
fix_ros_destination_path(IAS_KNOWLEDGE_BASE_PATH)

file(GLOB inputs owl/*.in)
foreach( _in ${inputs} )
  string(REPLACE ".in" "" _out ${_in})
  configure_file( ${_in} ${_out} )
endforeach( _in )


#set the default path for built executables to the "bin" directory
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
#set the default path for built libraries to the "lib" directory
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)

#uncomment if you have defined messages
#rosbuild_genmsg()
#uncomment if you have defined services
rosbuild_gensrv()

#common commands for building c++ executables and libraries
#rosbuild_add_library(${PROJECT_NAME} src/example.cpp)
#target_link_libraries(${PROJECT_NAME} another_library)
#rosbuild_add_boost_directories()
#rosbuild_link_boost(${PROJECT_NAME} thread)
rosbuild_add_executable(query_comp_orgprinciples src/query_comp_orgprinciples.cpp)
#target_link_libraries(example ${PROJECT_NAME})
